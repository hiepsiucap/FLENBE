# @format

name: Deploy FLENBE to EC2

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests (if any)
        run: npm test --if-present

      - name: Deploy to EC2
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Navigate to application directory
            cd /var/www/flenbe

            # Pull latest changes
            git pull origin main

            # Install dependencies
            npm ci --production

            # Create/update .env file with secrets
            cat > .env << 'EOF'
            # Database
            MONGODB=${{ secrets.MONGODB }}

            # JWT
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            JWT_LIFETIME=${{ secrets.JWT_LIFETIME }}
            JWT_REFRESH_LIFETIME=${{ secrets.JWT_REFRESH_LIFETIME }}

            # AWS Configuration
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            AWS_POLLY_VOICE_ID=${{ secrets.AWS_POLLY_VOICE_ID }}
            AWS_POLLY_ENGINE=${{ secrets.AWS_POLLY_ENGINE }}
            AWS_POLLY_OUTPUT_FORMAT=${{ secrets.AWS_POLLY_OUTPUT_FORMAT }}

            # OpenAI/ChatGPT
            GPT_KEY=${{ secrets.GPT_KEY }}

            # Unsplash API for FlashCard images
            ACCESS_KEY_FLASHCARD=${{ secrets.ACCESS_KEY_FLASHCARD }}

            # Cloudinary
            CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
            CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}

            # Email Configuration
            EMAIL_USER=${{ secrets.EMAIL_USER }}
            EMAIL_PASS=${{ secrets.EMAIL_PASS }}

            # Application
            PORT=${{ secrets.PORT }}
            FRONT_END_API=${{ secrets.FRONT_END_API }}
            EOF

            # Restart the application using PM2
            pm2 restart flenbe || pm2 start bin/www --name flenbe

            # Save PM2 configuration
            pm2 save
