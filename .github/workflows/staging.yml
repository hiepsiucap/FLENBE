# @format

name: Deploy to Staging

on:
  push:
    branches: [develop, staging]

jobs:
  deploy-staging:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "npm"

      - name: Install dependencies
        run: npm install --production

      - name: Deploy to Staging EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.STAGING_EC2_HOST }}
          username: ${{ secrets.STAGING_EC2_USERNAME }}
          key: ${{ secrets.STAGING_EC2_SSH_KEY }}
          port: ${{ secrets.STAGING_EC2_PORT }}
          script: |
            # Stop existing staging application
            pm2 delete flenbe-staging || true

            # Backup current staging version
            sudo rm -rf /var/www/flenbe-staging-backup
            sudo mv /var/www/flenbe-staging /var/www/flenbe-staging-backup || true

            # Create new directory
            sudo mkdir -p /var/www/flenbe-staging
            sudo chown $USER:$USER /var/www/flenbe-staging

      - name: Copy files to Staging EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.STAGING_EC2_HOST }}
          username: ${{ secrets.STAGING_EC2_USERNAME }}
          key: ${{ secrets.STAGING_EC2_SSH_KEY }}
          port: ${{ secrets.STAGING_EC2_PORT }}
          source: "."
          target: "/var/www/flenbe-staging"
          rm: true
          exclude: |
            .git
            .github
            node_modules/.cache
            *.md
            .env.example

      - name: Setup and start staging application
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.STAGING_EC2_HOST }}
          username: ${{ secrets.STAGING_EC2_USERNAME }}
          key: ${{ secrets.STAGING_EC2_SSH_KEY }}
          port: ${{ secrets.STAGING_EC2_PORT }}
          script: |
            cd /var/www/flenbe-staging

            # Install dependencies
            npm install --production

            # Create staging environment file
            cat > .env << EOF
            PORT=${{ secrets.STAGING_PORT }}
            MONGODB=${{ secrets.STAGING_MONGODB }}
            JWT_SECRET_KEY=${{ secrets.STAGING_JWT_SECRET_KEY }}
            FRONT_END_API=${{ secrets.STAGING_FRONT_END_API }}
            CLOUDINARY_NAME=${{ secrets.STAGING_CLOUDINARY_NAME }}
            CLOUDINARY_KEY=${{ secrets.STAGING_CLOUDINARY_KEY }}
            CLOUDINARY_SECRET=${{ secrets.STAGING_CLOUDINARY_SECRET }}
            GPT_KEY=${{ secrets.STAGING_GPT_KEY }}
            ACCESS_KEY_FLASHCARD=${{ secrets.STAGING_ACCESS_KEY_FLASHCARD }}
            AWS_ACCESS_KEY_ID=${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.STAGING_AWS_REGION }}
            EOF

            # Set correct permissions
            sudo chown -R $USER:$USER /var/www/flenbe-staging
            chmod 600 .env

            # Start staging application with PM2
            pm2 start bin/www --name flenbe-staging
            pm2 save

            echo "✅ Staging deployment completed successfully!"
            echo "🌐 Staging URL: http://${{ secrets.STAGING_EC2_HOST }}:${{ secrets.STAGING_PORT }}"
